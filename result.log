import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.Properties;
import java.util.Vector;

public class SFTPFileDownloader {
    public static void main(String[] args) {
        String sftpHost = "sftp.example.com";
        String sftpUser = "username";
        String sftpPassword = "password";
        int sftpPort = 22;
        String sftpDirectory = "/remote/path/";
        String fileNameToDownload = "file.txt"; // Specify the file to download

        Session session = null;
        ChannelSftp channelSftp = null;

        try {
            JSch jsch = new JSch();
            session = jsch.getSession(sftpUser, sftpHost, sftpPort);
            session.setPassword(sftpPassword);

            Properties config = new Properties();
            config.put("StrictHostKeyChecking", "no");
            session.setConfig(config);

            session.connect();
            System.out.println("Connected to the SFTP server");

            channelSftp = (ChannelSftp) session.openChannel("sftp");
            channelSftp.connect();
            System.out.println("SFTP Channel created");

            channelSftp.cd(sftpDirectory);

            Vector<ChannelSftp.LsEntry> fileList = channelSftp.ls(".");
            for (ChannelSftp.LsEntry entry : fileList) {
                if (!entry.getAttrs().isDir() && entry.getFilename().equals(fileNameToDownload)) {
                    System.out.println("Found file: " + entry.getFilename());

                    String localFilePath = "./" + entry.getFilename(); // Current directory
                    try (OutputStream outputStream = new FileOutputStream(new File(localFilePath))) {
                        channelSftp.get(entry.getFilename(), outputStream);
                        System.out.println("File downloaded to: " + localFilePath);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    // Save the local file path (you can store this path as needed)
                    String savedFilePath = new File(localFilePath).getAbsolutePath();
                    System.out.println("Saved file path: " + savedFilePath);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (channelSftp != null && channelSftp.isConnected()) {
                channelSftp.disconnect();
                System.out.println("SFTP Channel disconnected");
            }
            if (session != null && session.isConnected()) {
                session.disconnect();
                System.out.println("SFTP Session disconnected");
            }
        }
    }
}
