import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.List;

public class Main {
    public static void main(String[] args) {
        String json = "{\"totalCount\":40116,\"items\":[{\"isSelected\":false,\"id\":100691,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1200003302,\"csidName\":\"Cross Currency Deposit Branch\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Cross Currency Deposit Branch\",\"currentFee\":13,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100692,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1200004303,\"csidName\":\"Cross Currency Deposit ATM\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Cross Currency Deposit ATM\",\"currentFee\":10,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100693,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1200005304,\"csidName\":\"Cross Currency Withdrawal Branch\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Cross Currency Withdrawal Branch\",\"currentFee\":1,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100694,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1200006305,\"csidName\":\"Cross Currency Withdrawal ATM\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Cross Currency Withdrawal ATM\",\"currentFee\":2,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100695,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1300001367,\"csidName\":\"Transfers\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Transfers\",\"currentFee\":0,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100696,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1351001057,\"csidName\":\"Cash Deposit - Teller\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Deposit Branch\",\"currentFee\":2,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100697,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1351003003,\"csidName\":\"Cash Deposit Fee At ATM Intelligent Depositer\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Deposit ATM\",\"currentFee\":2,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100698,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1400001364,\"csidName\":\"Payments\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Payments\",\"currentFee\":0,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100699,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1400002358,\"csidName\":\"Overdraft Penalty\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"Overdraft Penalty\",\"currentFee\":15,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"},{\"isSelected\":false,\"id\":100700,\"product\":\"Foreign Currency Account (FCA)\",\"pricePlan\":\"1227_Foreign Currency Account (FCA)_AED\",\"csid\":1400003359,\"csidName\":\"SI Cancellation\",\"feeName\":\"FLAT_SIMPLE\",\"status\":\"Unassigned\",\"groupName\":\"SI Cancellation\",\"currentFee\":13,\"newFee\":0,\"capturer\":null,\"updatedAt\":null,\"reviewer\":null,\"reviewedAt\":null,\"publishedAt\":\"\"}]}";

        ObjectMapper objectMapper = new ObjectMapper();
        try {
            ForeignCurrencyAccountInfo foreignCurrencyAccountInfo = objectMapper.readValue(json, ForeignCurrencyAccountInfo.class);
            System.out.println("Total Count: " + foreignCurrencyAccountInfo.getTotalCount());
            System.out.println("Items:");
            for (ForeignCurrencyAccountItem item : foreignCurrencyAccountInfo.getItems()) {
                System.out.println(item);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

class ForeignCurrencyAccountInfo {
    @JsonProperty("totalCount")
    private int totalCount;
    @JsonProperty("items")
    private List<ForeignCurrencyAccountItem> items;

    // Getters and setters
    // toString() method
}

class ForeignCurrencyAccountItem {
    @JsonProperty("isSelected")
    private boolean isSelected;
    @JsonProperty("id")
    private int id;
    @JsonProperty("product")
    private String product;
    @JsonProperty("pricePlan")
    private String pricePlan;
    @JsonProperty("csid")
    private int csid;
    @JsonProperty("csidName")
    private String csidName;
    @JsonProperty("feeName")
    private String feeName;
    @JsonProperty("status")
    private String status;
    @JsonProperty("groupName")
    private String groupName;
    @JsonProperty("currentFee")
    private int currentFee;
    @JsonProperty("newFee")
    private int newFee;
    @JsonProperty("capturer")
    private String capturer;
    @JsonProperty("updatedAt")
    private String updatedAt;
    @JsonProperty("reviewer")
    private String reviewer;
    @JsonProperty("reviewedAt")
    private String reviewedAt;
    @JsonProperty("publishedAt")
    private String publishedAt;

    // Getters and setters
    // toString() method
}

#### Pricing sub Response ####

import java.time.ZonedDateTime;
import java.util.List;

public class Response {
    private int totalCount;
    private List<Item> items;

    // Getters and Setters

    public int getTotalCount() {
        return totalCount;
    }

    public void setTotalCount(int totalCount) {
        this.totalCount = totalCount;
    }

    public List<Item> getItems() {
        return items;
    }

    public void setItems(List<Item> items) {
        this.items = items;
    }

    import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.ZonedDateTime;
import java.util.List;

public class Response {
    @JsonProperty("totalCount")
    private int totalCount;
    
    @JsonProperty("items")
    private List<Item> items;

    // Getters and Setters

    public int getTotalCount() {
        return totalCount;
    }

    public void setTotalCount(int totalCount) {
        this.totalCount = totalCount;
    }

    public List<Item> getItems() {
        return items;
    }

    public void setItems(List<Item> items) {
        this.items = items;
    }

    public static class Item {
        @JsonProperty("id")
        private int id;

        @JsonProperty("product")
        private String product;

        @JsonProperty("pricePlan")
        private String pricePlan;

        @JsonProperty("csidName")
        private String csidName;

        @JsonProperty("feeEffectFrom")
        @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSX")
        private ZonedDateTime feeEffectFrom;

        @JsonProperty("feeEffectTo")
        @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSX")
        private ZonedDateTime feeEffectTo;

        @JsonProperty("feeName")
        private String feeName;

        @JsonProperty("chargeAlgorithm")
        private String chargeAlgorithm;

        @JsonProperty("rateType")
        private String rateType;

        @JsonProperty("tierOrder")
        private int tierOrder;

        @JsonProperty("tier")
        private int tier;

        @JsonProperty("unit")
        private int unit;

        @JsonProperty("min")
        private int min;

        @JsonProperty("max")
        private int max;

        @JsonProperty("currentFee")
        private int currentFee;

        @JsonProperty("newFee")
        private int newFee;

        @JsonProperty("feeChange")
        private int feeChange;

        @JsonProperty("isRejected")
        private boolean isRejected;

        @JsonProperty("isPending")
        private boolean isPending;

        @JsonProperty("isApproved")
        private boolean isApproved;

        @JsonProperty("isRejectedComments")
        private String isRejectedComments;

        @JsonProperty("isDisputeComments")
        private String isDisputeComments;

        // Getters and Setters

        public int getId() {
            return id;
        }

        public void setId(int id) {
            this.id = id;
        }

        public String getProduct() {
            return product;
        }

        public void setProduct(String product) {
            this.product = product;
        }

        public String getPricePlan() {
            return pricePlan;
        }

        public void setPricePlan(String pricePlan) {
            this.pricePlan = pricePlan;
        }

        public String getCsidName() {
            return csidName;
        }

        public void setCsidName(String csidName) {
            this.csidName = csidName;
        }

        public ZonedDateTime getFeeEffectFrom() {
            return feeEffectFrom;
        }

        public void setFeeEffectFrom(ZonedDateTime feeEffectFrom) {
            this.feeEffectFrom = feeEffectFrom;
        }

        public ZonedDateTime getFeeEffectTo() {
            return feeEffectTo;
        }

        public void setFeeEffectTo(ZonedDateTime feeEffectTo) {
            this.feeEffectTo = feeEffectTo;
        }

        public String getFeeName() {
            return feeName;
        }

        public void setFeeName(String feeName) {
            this.feeName = feeName;
        }

        public String getChargeAlgorithm() {
            return chargeAlgorithm;
        }

        public void setChargeAlgorithm(String chargeAlgorithm) {
            this.chargeAlgorithm = chargeAlgorithm;
        }

        public String getRateType() {
            return rateType;
        }

        public void setRateType(String rateType) {
            this.rateType = rateType;
        }

        public int getTierOrder() {
            return tierOrder;
        }

        public void setTierOrder(int tierOrder) {
            this.tierOrder = tierOrder;
        }

        public int getTier() {
            return tier;
        }

        public void setTier(int tier) {
            this.tier = tier;
        }

        public int getUnit() {
            return unit;
        }

        public void setUnit(int unit) {
            this.unit = unit;
        }

        public int getMin() {
            return min;
        }

        public void setMin(int min) {
            this.min = min;
        }

        public int getMax() {
            return max;
        }

        public void setMax(int max) {
            this.max = max;
        }

        public int getCurrentFee() {
            return currentFee;
        }

        public void setCurrentFee(int currentFee) {
            this.currentFee = currentFee;
        }

        public int getNewFee() {
            return newFee;
        }

        public void setNewFee(int newFee) {
            this.newFee = newFee;
        }

        public int getFeeChange() {
            return feeChange;
        }

        public void setFeeChange(int feeChange) {
            this.feeChange = feeChange;
        }

        public boolean isRejected() {
            return isRejected;
        }

        public void setRejected(boolean rejected) {
            isRejected = rejected;
        }

        public boolean isPending() {
            return isPending;
        }

        public void setPending(boolean pending) {
            isPending = pending;
        }

        public boolean isApproved() {
            return isApproved;
        }

        public void setApproved(boolean approved) {
            isApproved = approved;
        }

        public String getIsRejectedComments() {
            return isRejectedComments;
        }

        public void setIsRejectedComments(String isRejectedComments) {
            this.isRejectedComments = isRejectedComments;
        }

        public String getIsDisputeComments() {
            return isDisputeComments;
        }

        public void setIsDisputeComments(String isDisputeComments) {
            this.isDisputeComments = isDisputeComments;
        }
    }
}


<dependency>
    <groupId>com.fasterxml.jackson.datatype</groupId>
    <artifactId>jackson-datatype-jsr310</artifactId>
    <version>2.14.0</version> <!-- Use the latest version -->
</dependency>

mapper.registerModule(new JavaTimeModule());
mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);


### capturer home response #####

{
  "totalCount": 0,
  "items": [
    {
      "isSelected": true,
      "id": 0,
      "isEdit": true,
      "product": "string",
      "pricePlan": "string",
      "csidName": "string",
      "feeEffectFrom": "2024-05-30T15:51:40.215Z",
      "feeEffectTo": "2024-05-30T15:51:40.215Z",
      "feeName": "string",
      "feeCategory": "string",
      "chargeAlgorithm": "string",
      "rateType": "string",
      "tierOrder": 0,
      "tier": 0,
      "unit": 0,
      "min": 0,
      "max": 0,
      "currentFee": 0,
      "newFee": 0,
      "feeChange": 0
    }
  ]
}
